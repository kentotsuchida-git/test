{
	"name": "PersonCountDataFlow",
	"properties": {
		"folder": {
			"name": "dataflow"
		},
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "PersonCountCSVData",
						"type": "DatasetReference"
					},
					"name": "source1"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "AggregatedData",
						"type": "DatasetReference"
					},
					"name": "sink1"
				}
			],
			"transformations": [
				{
					"name": "hasei1"
				},
				{
					"name": "select1"
				},
				{
					"name": "aggregation1"
				}
			],
			"script": "source(output(\n\t\tdevice_id as string,\n\t\tcustomer_id as string,\n\t\ttimestamp as long,\n\t\tstay_time as integer,\n\t\tage as integer,\n\t\tgender as string,\n\t\tmask as string,\n\t\twatch_time as integer\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: true,\n\tignoreNoFilesFound: false,\n\tpreferredIntegralType: 'integer') ~> source1\nsource1 derive(generation = case(age < 10 && age >= 0, 0,\r\ncase(age < 20 && age >= 10, 10,\r\ncase(age < 30 && age >= 20, 20,\r\ncase(age < 40 && age >= 30, 30,\r\ncase(age < 50 && age >= 40, 40,\r\ncase(age < 60 && age >= 50, 50,\r\ncase(age < 70 && age >= 60, 60,\r\ncase(age < 80 && age >= 70, 70,\r\ncase(age < 90 && age >= 80, 80,\r\ncase(age < 100 && age >= 90, 90, -1)))))))))),\n\t\tgender = case(gender == 'male', 1,\r\ncase(gender == 'female', 2, 0)),\n\t\twatch_time_count = iif(watch_time > 0, 1, 0)) ~> hasei1\naggregation1 select(mapColumn(\n\t\tcustomer_id,\n\t\ttimestamp,\n\t\tstay_time_sum,\n\t\twatch_count,\n\t\twatch_time_sum,\n\t\tgeneration\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> select1\nhasei1 aggregate(stay_time_sum = sum(stay_time),\n\t\twatch_time_sum = sum(watch_time),\n\t\twatch_count = sum(watch_time_count)) ~> aggregation1\nselect1 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tcustomer_id as string,\n\t\ttarget_hour as string,\n\t\tstay_time_sum as integer,\n\t\tgeneration as integer,\n\t\tgender as integer,\n\t\tmask as integer,\n\t\twatch_time_sum as integer\n\t),\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError',\n\tmapColumn(\n\t\tcustomer_id\n\t)) ~> sink1"
		}
	}
}